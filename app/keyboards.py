from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder
from app.database.requests import Database

role = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='üß†–ü—Å–∏—Ö–æ–ª–æ–≥'),
                                      KeyboardButton(text='ü§î–ö–ª–∏–µ–Ω—Ç')]],
                           resize_keyboard=True, )

psy_keyboard = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='üìã–ü—Ä–∞–≤–∏–ª–∞'),
                                              KeyboardButton(text='üìû–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º')],
                                             [KeyboardButton(text='üéì–ö—É—Ä—Å—ã'),
                                              KeyboardButton(text='üë•–ö–ª–∏–µ–Ω—Ç—ã')]],
                                   resize_keyboard=True,
                                   input_field_placeholder='–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é...')

main = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='üåê–°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫'),
                                      KeyboardButton(text='ü§ñ–ò–ò –ø—Å–∏—Ö–æ–ª–æ–≥')],
                                     [KeyboardButton(text='üìû–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º'),
                                      KeyboardButton(text='üìã–ü—Ä–∞–≤–∏–ª–∞')]],
                           resize_keyboard=True,
                           input_field_placeholder='–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é...')

language = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–†—É—Å—Å–∫–∏–π', callback_data='russian')],
    [InlineKeyboardButton(text='–£–∑–±–µ–∫—Å–∫–∏–π', callback_data='uzbek')],
    [InlineKeyboardButton(text='–ê–Ω–≥–ª–∏–π—Å–∫–∏–π', callback_data='english')]])

get_number = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='‚òéÔ∏è–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä',
                                                           request_contact=True)]],
                                 resize_keyboard=True)

continue_btn = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='üìù–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É')]],
                                   resize_keyboard=True)

continue_btn_client = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='üìù–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É')]],
                                   resize_keyboard=True)

approve_button = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–û–¥–æ–±—Ä–∏—Ç—å –∑–∞—è–≤–∫—É', callback_data='approve')]
])

course_btn = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°—Ç–∞—Ä—Ç –≤ –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏', callback_data='psychology_start', url='https://t.me/+fVJICNKJb_k3NDMy')]
])

manager_btn = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º', callback_data='manager_connect', url='')]
])

genders = ['–ú—É–∂—Å–∫–æ–π', '–ñ–µ–Ω—Å–∫–∏–π']

async def inline_gender():
    keyboard = ReplyKeyboardBuilder()
    for gender in genders:
        keyboard.add(KeyboardButton(text=gender))
    return keyboard.adjust(2).as_markup()


choices = ['–î–∞', '–ù–µ—Ç']


async def inline_choice():
    keyboard = ReplyKeyboardBuilder()
    for choice in choices:
        keyboard.add(KeyboardButton(text=choice))
    return keyboard.adjust(2).as_markup()


psy_genders = ['–ú—É–∂—á–∏–Ω–∞', '–ñ–µ–Ω—â–∏–Ω–∞', '–ù–µ–≤–∞–∂–Ω–æ']


async def inline_psyGender():
    keyboard = ReplyKeyboardBuilder()
    for psy_gender in psy_genders:
        keyboard.add(KeyboardButton(text=psy_gender))
    return keyboard.adjust(2).as_markup()


graduations = ['–í—ã—Å—à–µ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ', '–°—Ä–µ–¥–Ω–µ–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ', '–ü—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –∫—É—Ä—Å–æ–≤ –ø–µ—Ä–µ–ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ —Å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–º',
               '–ï—â–µ —É—á—É—Å—å', '–ü—Ä–æ—Ñ–∏–ª—å–Ω–æ–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ (–∏–º–µ–µ—Ç–µ –ª–∏ –≤—ã –ø—Ä–æ–≤–æ –≤—ã–ø–∏—Å—ã–≤–∞—Ç—å –º–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ã)']


async def inline_graduation():
    keyboard = ReplyKeyboardBuilder()
    for graduation in graduations:
        keyboard.add(KeyboardButton(text=graduation))
    return keyboard.adjust(3).as_markup()


howFinds = ['–°–æ—Ü.—Å–µ—Ç–∏', '–ó–Ω–∞–∫–æ–º—ã–µ —Ä–∞—Å—Å–∫–∞–∑–∞–ª–∏', '–†–µ–∫–ª–∞–º–∞(–ª–∏—Å—Ç–æ–≤–∫–∏)']


async def inline_howFind():
    keyboard = ReplyKeyboardBuilder()
    for howFind in howFinds:
        keyboard.add(KeyboardButton(text=howFind))
    return keyboard.adjust(1).as_markup()


languages = ['–†—É—Å—Å–∫–∏–π', '–£–∑–±–µ–∫—Å–∫–∏–π']


async def inline_language():
    keyboard = ReplyKeyboardBuilder()
    for language in languages:
        keyboard.add(KeyboardButton(text=language))
    return keyboard.adjust(1).as_markup()

async def clients():
    all_clients = await Database.get_user()
    keyboard = InlineKeyboardBuilder
    for client in all_clients:
        keyboard.add(InlineKeyboardButton(text=psy.name, callback_data=f'client_{client.id}'))
    return keyboard.adjust(1).as_markup()
